{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/*import React, { Component } from 'react';\r\nimport { Stylesheet, Text, View, Animated, ColorPropType, useState} from 'react-native';\r\nimport  firebase from 'firebase/app';\r\nimport 'firebase/database'\r\nimport 'firebase/'\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\n//firebase.initializeApp(firebaseConfig);\r\n  \r\nexport class Sensor extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Portao: '',\r\n            valor: '',\r\n            };\r\n          \r\n        let firebaseConfig = {\r\n            apiKey: \"AIzaSyA8LQOWe1hwNZzP3yxfYepZoHf4M-ds8D8\",\r\n            authDomain: \"holdor-661d2.firebaseapp.com\",\r\n            databaseURL: \"https://holdor-661d2-default-rtdb.firebaseio.com\",\r\n            projectId: \"holdor-661d2\",\r\n            storageBucket: \"holdor-661d2.appspot.com\",\r\n            messagingSenderId: \"959425559187\",\r\n            appId: \"1:959425559187:web:3d6444684619296a9b6b66\",\r\n            measurementId: \"G-NYRCMZMD71\"\r\n            };\r\n    \r\n        if (firebase.apps.length === 0) {\r\n            firebase.initializeApp(firebaseConfig);\r\n          }\r\n\r\n          \r\n    }\r\n\r\n\r\n   // PEGANDO VALORES DO BANCO DE DADOS\r\n\r\n    componentDidMount(){\r\n    firebase.database().ref(\"Portao/estado\").on('value', (snapshot)=> {\r\n        let Portao = snapshot.val() //poderia já setar o state aqui.)\r\n            this.setState({\r\n                      Estado: Portao,\r\n            }) \r\n        })\r\n\r\n    firebase.database().ref(\"Abertura/valor\").on('value', (snapshot)=> {\r\n        let ValorAbertura = snapshot.val() //poderia já setar o state aqui.)\r\n        ValorAbertura = ValorAbertura / 100\r\n            this.setState({\r\n                Abertura: ValorAbertura,\r\n            }) \r\n        })\r\n    \r\n    firebase.database().ref(\"UnidadeMedida\").on('value', (snapshot)=> {\r\n        let UnidadeSingular = snapshot.val() //poderia já setar o state aqui.)\r\n            this.setState({\r\n                singular: UnidadeSingular,\r\n                plural: `${UnidadeSingular}s`\r\n            }) \r\n        })\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\nrender(){\r\n\r\n    const { Estado, Abertura, singular, plural } = this.state; //usando a desestruturação\r\n    let animaPortao = Abertura * 60\r\n    let UnMedida = Abertura < 1.01 ? singular : plural\r\n    \r\n    \r\n    return(\r\n        <View style={{ \r\n            display: 'flex',\r\n            bottom: 30,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',}}>\r\n\r\n\r\n            <Text\r\n            style={\r\n                {\r\n                    color: '#474954',\r\n                    fontSize: 35,\r\n                }\r\n            }\r\n            >\r\n                {Estado}\r\n            </Text>\r\n\r\n\r\n            <View style={{\r\n                height: 40, width:10, backgroundColor: '#5adbff',\r\n                position: 'absolute', marginLeft: -250}}>\r\n            </View>\r\n\r\n            <View style={{\r\n                height: 40, width:10, backgroundColor: '#5adbff',\r\n                position: 'absolute', marginLeft: 250}}>\r\n            </View>\r\n\r\n                <Animated.View\r\n                style={\r\n                    {\r\n                        width: 260,\r\n                        height: 35,\r\n                        borderColor: '#5adbff',\r\n                        borderWidth: 2,\r\n                        backgroundColor: '#474954',\r\n                        left: animaPortao,\r\n                        position: 'absoulte',\r\n                        display: 'flex'\r\n                    }\r\n                }\r\n                >\r\n\r\n                </Animated.View>\r\n\r\n\r\n\r\n\r\n            <Text\r\n                style={\r\n                    {\r\n                        color: '#474954',\r\n                        fontSize: 35,\r\n                    }\r\n                }\r\n            >\r\n                {Abertura} <Text style={{fontSize: 15}}>{UnMedida}</Text>\r\n            </Text>\r\n        </View>\r\n            );\r\n    }\r\n}*/"]},"metadata":{},"sourceType":"script"}