{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\CODES\\\\HolDorV2\\\\HolDor2\\\\src\\\\components\\\\Distancia.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nvar TelaLogin = function (_Component) {\n  _inherits(TelaLogin, _Component);\n\n  var _super = _createSuper(TelaLogin);\n\n  function TelaLogin(props) {\n    var _this;\n\n    _classCallCheck(this, TelaLogin);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      cidadeINput: '',\n      emailInput: '',\n      estadoInput: '',\n      nomeINput: '',\n      senhaInput: '',\n      valor: ''\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyA8LQOWe1hwNZzP3yxfYepZoHf4M-ds8D8\",\n      authDomain: \"holdor-661d2.firebaseapp.com\",\n      databaseURL: \"https://holdor-661d2-default-rtdb.firebaseio.com\",\n      projectId: \"holdor-661d2\",\n      storageBucket: \"holdor-661d2.appspot.com\",\n      messagingSenderId: \"959425559187\",\n      appId: \"1:959425559187:web:3d6444684619296a9b6b66\",\n      measurementId: \"G-NYRCMZMD71\"\n    };\n\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    return _this;\n  }\n\n  _createClass(TelaLogin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref(\"Portao/estado\").on('value', function (snapshot) {\n        var dado = snapshot.val();\n\n        _this2.setState({\n          usuario: dado\n        });\n      });\n      firebase.database().ref(\"Abertura/valor\").on('value', function (snapshot) {\n        var ValorAbertura = snapshot.val();\n\n        _this2.setState({\n          Abertura: ValorAbertura\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          usuario = _this$state.usuario,\n          Abertura = _this$state.Abertura;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, usuario), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, Abertura));\n    }\n  }]);\n\n  return TelaLogin;\n}(Component);\n\nexport { TelaLogin as default };","map":{"version":3,"sources":["C:/Users/gabri/Documents/CODES/HolDorV2/HolDor2/src/components/Distancia.js"],"names":["React","Component","Stylesheet","firebase","TelaLogin","props","state","cidadeINput","emailInput","estadoInput","nomeINput","senhaInput","valor","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","database","ref","on","snapshot","dado","val","setState","usuario","ValorAbertura","Abertura"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;SACSC,U;;;;;AACT,OAAQC,QAAR,MAAsB,cAAtB;AACA,OAAO,mBAAP;AACA,OAAO,WAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;;IAOqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAC,EADH;AAETC,MAAAA,UAAU,EAAC,EAFF;AAGTC,MAAAA,WAAW,EAAC,EAHH;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,UAAU,EAAC,EALF;AAMTC,MAAAA,KAAK,EAAE;AANE,KAAb;AASA,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,yCADS;AAEjBC,MAAAA,UAAU,EAAE,8BAFK;AAGjBC,MAAAA,WAAW,EAAE,kDAHI;AAIjBC,MAAAA,SAAS,EAAE,cAJM;AAKjBC,MAAAA,aAAa,EAAE,0BALE;AAMjBC,MAAAA,iBAAiB,EAAE,cANF;AAOjBC,MAAAA,KAAK,EAAE,2CAPU;AAQjBC,MAAAA,aAAa,EAAE;AARE,KAArB;;AAWA,QAAIlB,QAAQ,CAACmB,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5BpB,MAAAA,QAAQ,CAACqB,aAAT,CAAuBX,cAAvB;AACD;;AAxBY;AA2BlB;;;;WAID,6BAAmB;AAAA;;AACnBV,MAAAA,QAAQ,CAACsB,QAAT,GAAoBC,GAApB,CAAwB,eAAxB,EAAyCC,EAAzC,CAA4C,OAA5C,EAAqD,UAACC,QAAD,EAAa;AAC9D,YAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;;AACJ,QAAA,MAAI,CAACC,QAAL,CAAc;AACIC,UAAAA,OAAO,EAAEH;AADb,SAAd;AAGC,OALD;AAOA1B,MAAAA,QAAQ,CAACsB,QAAT,GAAoBC,GAApB,CAAwB,gBAAxB,EAA0CC,EAA1C,CAA6C,OAA7C,EAAsD,UAACC,QAAD,EAAa;AACnE,YAAIK,aAAa,GAAGL,QAAQ,CAACE,GAAT,EAApB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACFG,UAAAA,QAAQ,EAAED;AADR,SAAd;AAGC,OALD;AAMK;;;WAEL,kBAAQ;AAGR,wBAA8B,KAAK3B,KAAnC;AAAA,UAAQ0B,OAAR,eAAQA,OAAR;AAAA,UAAiBE,QAAjB,eAAiBA,QAAjB;AAEA,aACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,OAAP,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOE,QAAP,CAFJ,CADR;AAOe;;;;EA7DoBjC,S;;SAAlBG,S","sourcesContent":["import React, {Component} from 'react';\r\nimport { Stylesheet, Text, View, TextInput, Button} from 'react-native';\r\nimport  firebase from 'firebase/app';\r\nimport 'firebase/database'\r\nimport 'firebase/'\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\n\r\n  \r\n//firebase.initializeApp(firebaseConfig);\r\n  \r\nexport default class TelaLogin extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cidadeINput:'',\r\n            emailInput:'',\r\n            estadoInput:'',\r\n            nomeINput: '',\r\n            senhaInput:'',\r\n            valor: '',\r\n            };\r\n          \r\n        let firebaseConfig = {\r\n            apiKey: \"AIzaSyA8LQOWe1hwNZzP3yxfYepZoHf4M-ds8D8\",\r\n            authDomain: \"holdor-661d2.firebaseapp.com\",\r\n            databaseURL: \"https://holdor-661d2-default-rtdb.firebaseio.com\",\r\n            projectId: \"holdor-661d2\",\r\n            storageBucket: \"holdor-661d2.appspot.com\",\r\n            messagingSenderId: \"959425559187\",\r\n            appId: \"1:959425559187:web:3d6444684619296a9b6b66\",\r\n            measurementId: \"G-NYRCMZMD71\"\r\n            };\r\n    \r\n        if (firebase.apps.length === 0) {\r\n            firebase.initializeApp(firebaseConfig);\r\n          }\r\n\r\n          \r\n    }\r\n\r\n\r\n          // Notei que você recebe só o nome na função, poderia retornar todos os dados tbm se necessário\r\n    componentDidMount(){\r\n    firebase.database().ref(\"Portao/estado\").on('value', (snapshot)=> {\r\n        let dado = snapshot.val() //poderia já setar o state aqui.)\r\n    this.setState({\r\n                      usuario: dado,\r\n              }) \r\n    })\r\n\r\n    firebase.database().ref(\"Abertura/valor\").on('value', (snapshot)=> {\r\n    let ValorAbertura = snapshot.val() //poderia já setar o state aqui.)\r\n    this.setState({\r\n                Abertura: ValorAbertura,\r\n              }) \r\n    })\r\n        }\r\n\r\n    render(){\r\n\r\n\r\n    const { usuario, Abertura } = this.state; //usando a desestruturação\r\n    \r\n    return(\r\n            <View>\r\n                <Text>{usuario}</Text>\r\n                <Text>{Abertura}</Text>\r\n            \r\n            </View>\r\n                      );\r\n                  }\r\n          }\r\n\r\n"]},"metadata":{},"sourceType":"module"}